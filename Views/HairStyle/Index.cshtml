@{
    ViewData["Title"] = "Saç Modelleri";
}

<div class="container">
    <h1 class="text-center mb-4">Yapay Zeka ile Saç Stili Önerisi</h1>

    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-body">
                    <form id="hairStyleForm" class="mb-4" method="post" enctype="multipart/form-data" onsubmit="submitForm(event)">
                        <!-- Opsiyonel Görsel Yükleme -->
                        <div class="mb-4">
                            <label for="imageUpload" class="form-label">Referans Görsel</label>
                            <input type="file" class="form-control" id="imageUpload" accept="image/*">
                            <div id="imagePreview" class="mt-2"></div>
                        </div>
                        
                        <!-- Saç Stili Seçimi -->
                        <div class="card mb-3">
                            <div class="card-body">
                                <h5 class="card-title">Saç Stili Seçimi</h5>
                                <div class="row">
                                    <div class="col-md-6 mb-3">
                                        <label for="hairStyle" class="form-label">Saç Modeli</label>
                                        <select class="form-select" id="hairStyle" required>
                                            <option value="">Seçiniz</option>
                                            <option value="BuzzCut">BuzzCut: Kısa Tıraş</option>
                                            <option value="UnderCut">UnderCut: Alt Kesim</option>
                                            <option value="Pompadour">Pompadour: Kabartılmış Saç</option>
                                            <option value="SlickBack">SlickBack: Geriye Taralı Saç</option>
                                            <option value="CurlyShag">CurlyShag: Kıvırcık Dağınık Saç</option>
                                            <option value="WavyShag">WavyShag: Dalgalı Dağınık Saç</option>
                                            <option value="FauxHawk">FauxHawk: Sahte Mohikan</option>
                                            <option value="Spiky">Spiky: Dikenli Saç</option>
                                            <option value="CombOver">CombOver: Yana Taranmış Saç</option>
                                            <option value="HighTightFade">HighTightFade: Yüksek ve Sıkı Fade</option>
                                            <option value="ManBun">ManBun: Topuz (Erkek)</option>
                                            <option value="Afro">Afro: Afro Saç</option>
                                            <option value="LowFade">LowFade: Düşük Fade</option>
                                            <option value="TexturedFringe">TexturedFringe: Dokulu Kahkül</option>
                                            <option value="MessyTousled">MessyTousled: Dağınık Karışık Saç</option>
                                        </select>
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label for="hairColor" class="form-label">Saç Rengi</label>
                                        <select class="form-select" id="hairColor" required>
                                            <option value="rapid_do_not_include_in_request_key" selected>Orijinal Renk</option>
                                            <option value="blonde">Sarı Saç</option>
                                            <option value="brown">Kahverengi Saç</option>
                                            <option value="black">Siyah Saç</option>
                                            <option value="red">Kırmızı Saç</option>
                                            <option value="blue">Mavi Saç</option>
                                            <option value="purple">Mor Saç</option>
                                            <option value="pink">Pembe Saç</option>
                                            <option value="grey">Gri Saç</option>
                                            <option value="white">Beyaz Saç</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <button id="submitButton" class="btn btn-primary w-100">Stil Önerisi Al</button>
                    </form>

                    <div id="loadingIndicator" style="display: none;" class="text-center">
                        <div class="spinner-border" role="status">
                            <span class="visually-hidden">Yükleniyor...</span>
                        </div>
                        <p class="mt-2">Öneriler hazırlanıyor...</p>
                    </div>

                    <div id="results" style="display: none;">
                        <h3 class="mb-3">Önerilen Stil</h3>
                        <div class="row" id="suggestedStyles">
                            <!-- API sonuçları buraya gelecek -->
                        </div>
                        <div class="mt-4">
                            <h4>Öneri</h4>
                            <p id="suggestionText"></p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    const hairStyleForm = document.getElementById('hairStyleForm');
    const imageUpload = document.getElementById('imageUpload');
    const loadingIndicator = document.getElementById('loadingIndicator');
    const results = document.getElementById('results');
    const suggestedStyles = document.getElementById('suggestedStyles');
    const suggestionText = document.getElementById('suggestionText');

    function submitForm(event) {
        event.preventDefault();
        const formData = new FormData();
        formData.append('task_type', 'async');

        // Dosya yükleme kontrolü
        const imageFile = imageUpload.files[0];
        if (!imageFile) {
            alert('Lütfen bir görsel yükleyin');
            return;
        }

        formData.append('image', imageFile);
        formData.append('hair_style', document.getElementById('hairStyle').value);
        //formData.append('color', document.getElementById('hairColor').value);

        // Yükleme başlamadan önce UI güncelleme
        loadingIndicator.style.display = 'block';
        results.style.display = 'none';

        const url = 'https://hairstyle-changer-pro.p.rapidapi.com/facebody/editing/hairstyle-pro';
        const options = {
            method: 'POST',
            headers: {
                'x-rapidapi-key': '2efdcd7987mshc76755e24485269p143971jsnca3f0e3cb75d',
                'x-rapidapi-host': 'hairstyle-changer-pro.p.rapidapi.com',
            },
            body: formData
        };

        fetch(url, options)
            .then(response => {
                if (!response.ok) throw new Error('API request failed');
                return response.json();
            })
            .then(result => {
                fetchTaskResult(result.task_id);
            })
            .catch(error => {
                console.error(error);
                loadingIndicator.style.display = 'none';
                alert('Bir hata oluştu. Lütfen tekrar deneyin.');
            });
    }

    async function fetchTaskResult(taskId) {
        const url = `https://hairstyle-changer-pro.p.rapidapi.com/api/rapidapi/query-async-task-result?task_id=${taskId}`;
        const options = {
            method: 'GET',
            headers: {
                'x-rapidapi-key': '36d444af4cmsh73f0f6821260de2p1cdad1jsnc8b30fc73655',
                'x-rapidapi-host': 'hairstyle-changer-pro.p.rapidapi.com',
            }
        };

        try {
            let taskStatus = 0;
            let result;
            
            do {
                const response = await fetch(url, options);
                if (!response.ok) throw new Error('Failed to fetch task result');
                result = await response.json();
                taskStatus = result.task_status;

                if (taskStatus === 0 || taskStatus === 1) {
                    await new Promise(resolve => setTimeout(resolve, 30000));
                }
            } while (taskStatus === 0 || taskStatus === 1);

            loadingIndicator.style.display = 'none';

            if (taskStatus === 2 && result.data && Array.isArray(result.data.images)) {
                // Sonuçları göster
                results.style.display = 'block';
                
                // Görsel sonuçları ekle
                suggestedStyles.innerHTML = result.data.images.map(imageUrl => `
                    <div class="col-md-6 mb-3">
                        <img src="${imageUrl}" class="img-fluid rounded" alt="Önerilen stil">
                    </div>
                `).join('');

                // Varsa metin önerisini ekle
                if (result.data.suggestion) {
                    suggestionText.textContent = result.data.suggestion;
                }
            } else {
                throw new Error('Invalid result format');
            }
        } catch (error) {
            console.error('Error:', error);
            loadingIndicator.style.display = 'none';
            alert('Sonuçlar alınırken bir hata oluştu. Lütfen tekrar deneyin.');
        }
    }

    // Görsel önizleme için
    imageUpload.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const imagePreview = document.getElementById('imagePreview');
                imagePreview.innerHTML = `<img src="${e.target.result}" class="img-fluid rounded" style="max-height: 300px; object-fit: contain;" alt="Seçilen görsel">`;
            }
            reader.readAsDataURL(file);
        }
    });
</script>

